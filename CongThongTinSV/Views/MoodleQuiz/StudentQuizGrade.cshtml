@using CongThongTinSV.Models;
@using CongThongTinSV.App_Lib;

@{
    ViewBag.Title = ViewBag.FullName + " - " + ViewBag.CourseName;
    string heading = ViewBag.FullName + " (" + ViewBag.CourseName + ") - Điểm thi cũ: ";
}
@{
    if(ViewBag.Error != "")
    {
        <h2>@ViewBag.Title</h2>
        <h2 class="error">Lỗi: @ViewBag.Error</h2>
    }
    else
    {
        bool haveGrade = ViewBag.GradeID == 0 ? false : true;
        <h2 id="oldgrade">@heading@ViewBag.Grade</h2>
        @(Html.Kendo().Grid<CongThongTinSV.Models.MoodleStudentQuizGrade>()
            .Name("Grid")
            .Columns(columns =>
            {
                columns.Bound(c => c.ID).Title("Bài kiểm tra")
                    .ClientTemplate("<a href=#=Url# title='Tới trang làm bài'>#=QuizName#</a>")
                    .Width(500);
                columns.Bound(c => c.Grade)
                    .Width(70)
                    .HtmlAttributes(new { style = "text-align:center" })
                    .ClientTemplate(
                     "# if (Grade != null) { #" +
                        (@Html.ActionLink("#= kendo.toString(Grade, '0.0') #", "QuizStudentGrade", "MoodleQuiz", new { quizid = "QuizID" }, new { title = "Xem bảng điểm chi tiết"})).ToHtmlString().Replace("QuizID", "#=ID#") +
                        "# } #");
                columns.Bound(c => c.Grade)
                    .Title("Xem")
                    .HeaderHtmlAttributes(new { style = "text-align:center" })
                    .HtmlAttributes(new { style = "text-align:center" })
                    .Width(120)
                    .Sortable(false)
                    .Groupable(false)
                    .Filterable(false)
                    .ClientTemplate(
                    "# if (Grade != null) { #" +
                        (@Html.ActionLink("Xem lại bài làm", "StudentQuizReview", "MoodleQuiz", new { userid = ViewBag.UserID, quizid = "QuizID" }, null)).ToHtmlString().Replace("QuizID", "#=ID#") +
                        "# } #");
                columns.Bound(c => c.Grade)
                    .Title("Thực hiện")
                    .Sortable(false)
                    .Groupable(false)
                    .Filterable(false)
                    .ClientTemplate(
                        "# if (Grade != null) { #" +
                            "<button class='k-button' onclick='updateYgrade(#=Grade#)'>Cập nhật điểm</button>" +
                        "# } #"
                    )
                    .Visible(haveGrade);
               
            })
            .Pageable(pager => pager.PageSizes(new int[] { 5, 10, 20, 50 }).Refresh(true).Input(true).Numeric(false).Messages(m =>{ m.ItemsPerPage("dòng mỗi trang"); m.First("Trang đầu tiên"); m.Last("Trang cuối cùng"); m.Next("Trang sau"); m.Previous("Trang trước"); m.Refresh("Làm mới");}))
            .Sortable(s => s.SortMode(GridSortMode.SingleColumn))
            .Filterable()
            .Scrollable()
            //.Groupable()
            .Resizable(r => r.Columns(true))
            .Reorderable(ro => ro.Columns(true))
            .Navigatable()
            //.HtmlAttributes(new { style = "height:auto" })
            //.ColumnMenu(menu => menu.Enabled(true).Sortable(false))
            //.Selectable(s => s.Mode(GridSelectionMode.Single))
            .DataSource(
                dataSource => dataSource
                    .Ajax()
                    .Read(read => read.Action("GetStudentQuizGrades", "MoodleQuiz", new { courseid = ViewBag.CourseID , userid = ViewBag.UserID }))
                    .PageSize(50)
            )
            .Events(e => e.DataBound("onDataBound"))
        );
    }
}
<div style="text-align: center;margin-top: 10px;">
    <button class="k-button" type="submit" onclick="pageback()">Quay về danh sách các bài thi</button>
</div>
<script type ="text/javascript">
    function onDataBound(e) {
        resizeGrid("#Grid");
    }
    function gradeRefresh() {
        //document.getElementById('oldgrade').innerHTML = '@heading@MoodleLib.GetYGradeString(ViewBag.UserID, ViewBag.CourseID)';
        window.location.reload(false);
    }

    function updateYgrade(grade) {
        if (confirm('Bạn muốn cập nhật điểm mới cho học viên này?')) {
            var action = '@Url.Action("UpdateYGrade","MoodleQuiz")' + '/?newgrade=' + grade + '&id_diem_thi=' + '@ViewBag.GradeID';
            processing(action, "Đang cập nhật điểm mới cho học viên...", gradeRefresh);
         }
    }
</script>