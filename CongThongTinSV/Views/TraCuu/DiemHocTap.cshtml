@using Kendo.Mvc.UI;
@using CongThongTinSV.Models;
@{
    ViewBag.Title = "Tra cứu điểm học tập";
}

<h2>Tra cứu điểm học tập</h2>

<br />

@(Html.Kendo().AutoComplete()
        .Name("TuKhoa")
        .Filter("startswith")
        .DataTextField("Text")
        .Placeholder("Nhập từ khóa...")
        .HtmlAttributes(new {style="width: 200px"})
        //.Template("${data.Text}")
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("FilterSinhVien", "TraCuu")
                    .Data("getTuKhoa");
            })
            .ServerFiltering(true);
        })
)

@(Html.Kendo().DropDownList()
    .Name("NamHoc")
    .OptionLabel("Toàn khóa")
    .HtmlAttributes(new { style = "width:120px" })
    .DataTextField("Text")
    .DataValueField("Value")
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Action("GetNamHocTraCuu", "JSON")
                .Data("getTuKhoa");
        });
    })
    //.Enable(false)
    .AutoBind(false)
    .CascadeFrom("TuKhoa")
)
@(Html.Kendo().DropDownList()
    .Name("HocKy")
    .HtmlAttributes(new {style="width:120px"})
    .OptionLabel("Cả năm")
    .DataTextField("Text")
    .DataValueField("Value")
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Action("GetHocKyTraCuu", "JSON")
                .Data("getTuKhoa");
        }).ServerFiltering(true);
    })
    .Enable(false)
    .AutoBind(false)
        .CascadeFrom("NamHoc")
)

<!--input type="submit" value="Tra cứu" id="TraCuuButton" class="k-button"/-->
<button class="k-button" id="TraCuuButton">Tra cứu</button><br /><br />
<div id="ThongTin">

</div>
@(Html.Kendo().Grid<CongThongTinSV.Models.DiemHocTap>()
    .Name("GridBangDiem")
    .Columns(columns => {
        columns.Bound(diem => diem.Ma_mon).Width(50);
        columns.Bound(diem => diem.Ten_mon).Width(150);
        columns.Bound(diem => diem.X).Width(50);
        columns.Bound(diem => diem.Y).Width(50);
        columns.Bound(diem => diem.Z).Width(50);
        columns.Bound(diem => diem.Diem_chu).Width(50);
        columns.Bound(diem => diem.Nam_hoc).Width(100);//.Visible(false);
        columns.Bound(diem => diem.Hoc_ky).Width(50);//.Visible(false);
    })
    .Groupable()
    .Pageable()
    .Sortable()
    .Scrollable()
    .Pageable(pager =>pager.Enabled(false))
    .DataSource( 
        dataSource => dataSource.Ajax()
                .Group(group => group.Add(diem => diem.Nam_hoc))
                .Group(group => group.Add(diem => diem.Hoc_ky))
            .Read(read => read.Action("DiemHocTap","JSON").Data("getTuKhoa"))
    )
    .HtmlAttributes(new {style = "height:400px"})
)

<script>
    var ID_sv=null;
    function getTuKhoa() {
        return {
            TuKhoa: $("#TuKhoa").val(),
            NamHoc: $("#NamHoc").val(),
            HocKy: $("#HocKy").val()
        };
    }
    function getTuKhoa() {
        return {
            TuKhoa: $("#TuKhoa").val(),
            NamHoc: $("#NamHoc").val(),
            HocKy: $("#HocKy").val()
        };
    }
    $("#TraCuuButton").click(function () {
        //$("#GridBangDiem").fadeIn(1000, function () { });
        $("#GridBangDiem").data("kendoGrid").dataSource.read();
    });

</script>