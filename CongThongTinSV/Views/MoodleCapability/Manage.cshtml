@using Kendo.Mvc.UI;
@using CongThongTinSV.Models;
@{
    ViewBag.Title = "Phân quyền dịch vụ web moodle";
}

@(Html.Kendo().ComboBox()
    .Name("WebService")
    .Placeholder("Chọn dịch vụ")
    .HtmlAttributes(new {style="width:260px"})
    .DataTextField("Text")
    .DataValueField("Value")
        //.SelectedIndex(0)
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Action("GetWebServiceList", "MoodleWebService");
        }).ServerFiltering(true);
    })
    .Events(e =>
    {
        e.Change("loadGrid");
    })
    //.HtmlAttributes(new { style = "display: block;"})
)
@*<button id="assign_top" class="k-button" onclick="AssignMany()">Kích hoạt</button>
<button id="unassign_top" class="k-button" onclick="UnassignMany()">Hủy kích hoạt</button> *@
@(Html.Kendo().Grid<CongThongTinSV.Models.Capability>()
    .Name("Grid")
    .Columns(columns => {
        columns.Bound(c => c.ID_quyen)
            .ClientTemplate("<input type='checkbox' class='chkbx' value='#= ID_quyen #'/>")
            .HeaderTemplate("<input type='checkbox' id='masterCheckBox'/>")
            .Width(40)
            .Title("")
            .HeaderHtmlAttributes(new { style = "text-align:center" })
            .HtmlAttributes(new { style = "text-align:center" })
            .Filterable(false).Groupable(false).Sortable(false);
        columns.Bound(c => c.Ten_quyen);
        columns.Bound(c => c.Action_name).Width(280);
        columns.Bound(c => c.Trang_thai).Width(150).Title("Thực hiện")
            .HeaderHtmlAttributes(new { style = "align:center" })
            .ClientTemplate(
            "# if (Trang_thai) { #" +
                "<img class='image_check' src=" + Url.Content("~/Images/check.png") +  " alt='Ok' title='Đã kích hoạt' />" +
                "<button class='button-delete' title='Hủy kích hoạt' onclick='unassign_one(#=ID_quyen#)'></button>" +
                "# } else { #" +
                "<button class='button-add' title='Kích hoạt' onclick='assign_one(#=ID_quyen#)'></button>" +
            "# } #");
    })
    .Pageable(pager => pager.PageSizes(new int[]{5, 10, 20, 50, 100, 1000}).Refresh(true).Input(true).Numeric(false))
    .Sortable(s => s.SortMode(GridSortMode.SingleColumn))
    .Filterable()
    .Scrollable()
    .Groupable()
    .Resizable(r => r.Columns(true))
    .Reorderable(ro => ro.Columns(true))
    .Navigatable()
    .HtmlAttributes(new { style = "height:400px" })
    //.ColumnMenu(menu => menu.Enabled(true).Sortable(false))
    //.Selectable(s => s.Mode(GridSelectionMode.Single))
    .Events(e => {
                e.DataBound("onDataBound");
            })
    .DataSource(
        dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("GetCapabilities", "MoodleCapability").Data("filterGrid"))
            .PageSize(50)
    )
)
<div>
    <button id="assign_bottom" class="k-button" onclick="assign()">Kích hoạt</button>
    <button id="unassign_bottom" class="k-button" onclick="unassign()">Hủy kích hoạt</button> 
</div>

<script type="text/javascript">
    var selectedVals = [];

    function assign() {
        if (selectedVals.length == 0) {
            alert('Vui lòng chọn một quyền!');
            return;
        }
        var action = '@Url.Action("AssignCapabilities", "MoodleCapability")' + '/?id_dv=' + jQuery("#WebService").val() + '&selectedVals=' + selectedVals;
        processing(action, "Đang kích hoạt các quyền đã chọn...", gridRefresh);
    }

    function unassign () {
        if (selectedVals.length == 0) {
            alert('Vui lòng chọn một quyền!');
            return;
        }

        if (confirm('Bạn muốn hủy kích hoạt các quyền đã chọn?')) {
            var action = '@Url.Action("UnassignCapabilities", "MoodleCapability")' + '/?id_dv=' + jQuery("#WebService").val() + '&selectedVals=' + selectedVals;
            processing(action, "Đang hủy kích hoạt các quyền đã chọn...", gridRefresh);
        }
    }

    function assign_one(selectedVal) {
        var action = '@Url.Action("AssignCapabilities", "MoodleCapability")' + '/?id_dv=' + jQuery("#WebService").val() + '&selectedVals=' + selectedVal;
        processing(action, "Đangkích hoạt quyền...", gridRefresh);
    }

    function unassign_one(selectedVal) {
        var action = '@Url.Action("UnassignCapabilities", "MoodleCapability")' + '/?id_dv=' + jQuery("#WebService").val() + '&selectedVals=' + selectedVal;
        processing(action, "Đang hủy kích hoạt quyền...", gridRefresh);
    }

    function filterGrid() {
        return {
            id_dv: $("#WebService").val()
        }
    }
    
    function loadGrid() {
        selectedVals.splice(0, selectedVals.length);
        gridRefresh();
    }
    // on data bound, check checkboxes
    function onDataBound(e) {
        checkCells(selectedVals, '#masterCheckBox', '#Grid :checkbox');
    }
    // on click checkbox cell in a row
    $(function () {
        $('#Grid').on('click', '.chkbx', function () {
            var state = $(this).is(':checked');
            var grid = $('#Grid').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));

            checkVal(dataItem.ID_quyen, state, selectedVals);
            $('#masterCheckBox').attr('checked', isCheckedAll('#Grid :checkbox'));
        })
    })

    $('#masterCheckBox').click(function () { checkAll(this, '#Grid :checkbox'); })

    function gridRefresh() {
        $("#Grid").data("kendoGrid").dataSource.read();
    }
</script>