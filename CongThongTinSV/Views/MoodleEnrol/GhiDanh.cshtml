@using Kendo.Mvc.UI;
@using CongThongTinSV.Models;
@{
    ViewBag.Title = "Ghi danh học viên vào khóa học trên Moodle";
}

@(Html.Kendo().DropDownList()
    .Name("HocKy")
    .OptionLabel("Chọn học kỳ")
    .HtmlAttributes(new { style = "width:180px" })
    .DataTextField("Text")
    .DataValueField("Value")
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Action("GetMoodleHocKy", "MoodleCategory");
        }).ServerFiltering(true);
    })
)

@(Html.Kendo().DropDownList()
    .Name("LopHocPhan")
    .OptionLabel("Chọn lớp học phần")
    .HtmlAttributes(new { style = "width:320px" })
    .DataTextField("Text")
    .DataValueField("Value")
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Action("GetMoodleLopHocPhan", "MoodleCourse").Data("filterLopHocPhan");
        }).ServerFiltering(true);
    })
    .Events(e =>
    {
        e.Change("loadGrid");
    })
    .Enable(false)
    .AutoBind(false)
    .CascadeFrom("HocKy")
)

@(Html.Kendo().Grid<CongThongTinSV.Models.MoodleSinhVien>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.ID)
            .ClientTemplate("<input type='checkbox' class='chkbx' value='#= ID #'/>")
            .HeaderTemplate("<input type='checkbox' id='masterCheckBox'/>")
            .Width(40)
            .Title("")
            .IncludeInMenu(false)
            .HeaderHtmlAttributes(new { style = "text-align:center" })
            .HtmlAttributes(new { style = "text-align:center" })
            .Filterable(false).Groupable(false).Sortable(false);
        columns.Bound(c => c.Ma_sv).Width(80);
        columns.Bound(c => c.ID_moodle).Width(105);
        columns.Bound(c => c.Ho_dem).Width(150);
        columns.Bound(c => c.Ten).Width(80);
        columns.Bound(c => c.Ngay_sinh).Width(100).Format("{0:dd-MM-yyyy}");
        //columns.Bound(c => c.Gioi_tinh).Width(90);
        columns.Bound(c => c.Lop).Width(90);
        columns.Bound(c => c.DiemX).Width(80);
        columns.Bound(c => c.Ghi_danh).Width(90);
        columns.Bound(c => c.Ten_nhom);
    })
    .Pageable(pager => pager.PageSizes(new int[] { 5, 10, 20, 50, 80 }).Refresh(true).Input(true).Numeric(false))
    .Sortable(s => s.SortMode(GridSortMode.MultipleColumn))
    .Filterable()
    .Scrollable()
    .Groupable()
    .Resizable(r => r.Columns(true))
    .Reorderable(ro => ro.Columns(true))
    .Navigatable()
        //.ColumnMenu(menu => menu.Enabled(true).Sortable(false))
    .Selectable(s => s.Mode(GridSelectionMode.Single))
        //.HtmlAttributes(new {style = "height:400px"})
    .Events(e =>
    {
        e.DataBound("onDataBound");
    })
    .DataSource(
        dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("GetHocVien", "MoodleEnrol").Data("filterGrid"))
            .PageSize(50)
    )
)
<div>
    <button id="createUser">Đăng ký</button>
    <button id="deleteUser">Hủy đăng ký</button>
    <button id="createEnrol">Ghi danh</button>
    <button id="deleteEnrol">Hủy ghi danh</button>
    @(Html.Kendo().DropDownList()
        .Name("Nhom")
        .OptionLabel("Chọn nhóm")
        .HtmlAttributes(new { style = "width:180px" })
        .DataTextField("Text")
        .DataValueField("Value")
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetNhom", "MoodleGroup").Data("filterGrid");
            }).ServerFiltering(true);
        })
        .Enable(false)
        .AutoBind(false)
        .CascadeFrom("LopHocPhan")
    )
    <button id="addMember">Thêm thành viên</button>
    <button id="deleteMember">Bớt thành viên</button>
</div>
<div>
    @Html.TextBox("TenNhom", "", new { placeholder = "Nhập tên nhóm", style = "width:120px" })
    @Html.TextBox("MoTa", "", new { placeholder = "Mô tả nhóm", style = "width:200px" })
    <button id="createGroup">Tạo nhóm</button>
    <button id="updateGroup">Sửa nhóm</button>
    <button id="deleteGroup">Xóa nhóm</button>
</div>
<script type="text/javascript">
    var selectedVals = [];

    function filterGrid() {
        return {
            id_lop_tc: $("#LopHocPhan").val()
        }
    }

    function filterLopHocPhan() {
        return {
            id_hocky: $("#HocKy").val()
        }
    }

    function loadGrid() {
        selectedVals.splice(0, selectedVals.length);
        gridRefresh();
    }
    // on data bound, check checkboxes
    function onDataBound(e) {
        checkCells(selectedVals, '#masterCheckBox', '#Grid :checkbox');
    }
    // on click checkbox cell in a row
    $(function () {
        $('#Grid').on('click', '.chkbx', function () {
            var state = $(this).is(':checked');
            var grid = $('#Grid').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));

            checkVal(dataItem.ID, state, selectedVals);
            $('#masterCheckBox').attr('checked', isCheckedAll('#Grid :checkbox'));
        })
    })

    $('#masterCheckBox').click(function () { checkAll(this, '#Grid :checkbox'); })

    function gridRefresh() {
        $("#Grid").data("kendoGrid").dataSource.read();
    }

    function groupRefresh() {
        $("#Nhom").data("kendoDropDownList").dataSource.read();
    }

    $("#createUser").click(function () {
        //window.location.href = '/MoodleEnrol/CreateSinhVien/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals;
        processing('/MoodleEnrol/CreateSinhVien/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals, "Đang tạo tài khoản moodle cho các sinh viên...", gridRefresh);
    })

    $("#deleteUser").click(function () {
        if (confirm('Bạn muốn xóa tài khoản moodle của các sinh viên đã chọn?')) {
            //window.location.href = '/MoodleEnrol/DeleteSinhVien/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals;
            processing('/MoodleEnrol/DeleteSinhVien/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals, "Đang xóa tài khoản moodle của các sinh viên...", gridRefresh);
        }
    })

    $("#createEnrol").click(function () {
        //window.location.href = '/MoodleEnrol/CreateGhiDanh/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals;
        processing('/MoodleEnrol/CreateGhiDanh/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals, "Đang ghi danh cho các sinh viên...", gridRefresh);
    })

    $("#deleteEnrol").click(function () {
        if (confirm('Bạn muốn hủy ghi danh của các sinh viên đã chọn?')) {
            //window.location.href = '/MoodleEnrol/DeleteGhiDanh/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals;
            processing('/MoodleEnrol/DeleteGhiDanh/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals, "Đang hủy ghi danh của các sinh viên...", gridRefresh);
        }
    })

    $("#createGroup").click(function () {
        processing('/MoodleGroup/CreateNhom/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&ten_nhom=' + jQuery("#TenNhom").val() + '&mo_ta=' + jQuery("#MoTa").val(), "Đang tạo nhóm học viên trong lớp học phần...", groupRefresh);
    })
</script>
