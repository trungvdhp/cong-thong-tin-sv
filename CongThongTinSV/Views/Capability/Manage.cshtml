@using Kendo.Mvc.UI;
@using CongThongTinSV.Models;
@{
    ViewBag.Title = "Quản lý quyền hạn";
}

@(Html.Kendo().Grid<Capability>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.ID_quyen)
           .ClientTemplate("<input type='checkbox' class='chkbx' value='#= ID_quyen #'/>")
           .HeaderTemplate("<input type='checkbox' id='masterCheckBox'/>")
           .Width(40)
           .Title("")
           .IncludeInMenu(false)
           .HeaderHtmlAttributes(new { style = "text-align:center" })
           .HtmlAttributes(new { style = "text-align:center" })
           .Filterable(false).Groupable(false).Sortable(false);
        columns.Bound(c => c.Ten_quyen);
        columns.Bound(c => c.Action_name).Width(320);
        columns.Command(command => { command.Edit().Text("Sửa"); command.Destroy().Text("Xóa"); }).Width(180);
    })
    .ToolBar(toolBar =>
    {
        toolBar.Create().Text("Thêm quyền");
        //toolBar.Custom().Text("Xóa các quyền").Url("#").HtmlAttributes(new { onclick = "Delete()" });
        toolBar.Custom().Text("Đồng bộ quyền").Url("#").HtmlAttributes(new { onclick = "Sync()" });
    })
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable(pager => pager.PageSizes(new int[] { 5, 10, 20, 50, 100 }).Refresh(true).Input(true).Numeric(false))
    .Sortable(s => s.SortMode(GridSortMode.SingleColumn))
    .Filterable()
    .Scrollable()
    .Groupable()
    .Resizable(r => r.Columns(true))
    .Reorderable(ro => ro.Columns(true))
    .Navigatable()
    //.ColumnMenu(menu => menu.Enabled(true).Sortable(false))
    //.Selectable(s => s.Mode(GridSelectionMode.Single))
    .Events(e =>
    {
        e.DataBound("onDataBound");
    })
    .DataSource(
        dataSource => dataSource
            .Ajax()
            .Events(events => events.Error("error_handler"))
            .Model(model =>
            {
                model.Id(p => p.ID_quyen);
                model.Field(p => p.ID_quyen).Editable(false);
            })
            .Read("GetCapabilities", "Capability")
            .Create("CreateCapability", "Capability")
            .Update("UpdateCapability", "Capability")
            .Destroy("DeleteCapability", "Capability")
            .PageSize(50)
    )
)
<div>
    <button id="delete" class="k-button" onclick="Delete()">Xóa các quyền</button>
    <button id="sync" class="k-button" onclick="Sync()">Đồng bộ quyền</button>
</div>
<script type="text/javascript">
    var selectedVals = [];

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }

    function loadGrid() {
        selectedVals.splice(0, selectedVals.length);
        gridRefresh();
    }
    // on data bound, check checkboxes
    function onDataBound(e) {
        checkCells(selectedVals, '#masterCheckBox', '#Grid :checkbox');
    }
    // on click checkbox cell in a row
    $(function () {
        $('#Grid').on('click', '.chkbx', function () {
            var state = $(this).is(':checked');
            var grid = $('#Grid').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));

            checkVal(dataItem.ID_quyen, state, selectedVals);
            $('#masterCheckBox').attr('checked', isCheckedAll('#Grid :checkbox'));
        })
    })
    $('#masterCheckBox').click(function () { checkAll(this, '#Grid :checkbox'); })

    function gridRefresh() {
        $("#Grid").data("kendoGrid").dataSource.read();
    }

    function Delete() {
        if (selectedVals.length == 0) {
            alert('Vui lòng chọn một quyền!');
            return;
        }

        if (confirm('Bạn muốn xóa toàn bộ các quyền đã chọn?')) {
            var action = '@Url.Action("DeleteCapabilities","Capability")' + '/?selectedVals=' + selectedVals;
            processing(action, "Đang xóa các quyền đã chọn...", gridRefresh);
        }
    }

    function Sync() {
        var action = '@Url.Action("SyncCapability","Capability")';
        processing(action, "Đang đồng bộ quyền...", gridRefresh);
     }
</script>
