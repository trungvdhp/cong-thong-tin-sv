@using Kendo.Mvc.UI;
@using CongThongTinSV.Models;
@{
    ViewBag.Title = "Ghi danh sinh viên vào khóa học trên Moodle";
}

@(Html.Kendo().ComboBox()
    .Name("HocKy")
    .Placeholder("Chọn học kỳ...")
    //.OptionLabel("Chọn học kỳ")
    .HtmlAttributes(new { style = "width:180px" })
    .DataTextField("Text")
    .DataValueField("Value")
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Action("GetSemesterList", "MoodleCategory");
        }).ServerFiltering(true);
    })
    //.Events(e =>
    //{
    //    e.Change("selectLopHocPhan");
    //})
)

@(Html.Kendo().ComboBox()
    .Name("LopHocPhan")
    .Placeholder("Chọn lớp học phần...")
    //.OptionLabel("Chọn lớp học phần")
    .HtmlAttributes(new { style = "width:320px" })
    .DataTextField("Text")
    .DataValueField("Value")
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Action("GetCourseList", "MoodleCourse").Data("filterLopHocPhan");
        }).ServerFiltering(true);
    })
    .Events(e =>
    {
        e.Change("loadGrid");
    })
    .Enable(false)
    .AutoBind(false)
    .CascadeFrom("HocKy")
)
@*<button id="createEnrol_top" class="k-button" onclick="CreateManyEnrol()">Ghi danh</button>
<button id="deleteEnrol_top" class="k-button" onclick="DeleteManyEnrol()">Đình chỉ ghi danh</button>*@
@(Html.Kendo().Grid<CongThongTinSV.Models.MoodleStudent>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.ID)
            .ClientTemplate("<input type='checkbox' class='chkbx' value='#= ID #'/>")
            .HeaderTemplate("<input type='checkbox' id='masterCheckBox'/>")
            .Width(40)
            .Title("")
            .IncludeInMenu(false)
            .HeaderHtmlAttributes(new { style = "text-align:center" })
            .HtmlAttributes(new { style = "text-align:center" })
            .Filterable(false).Groupable(false).Sortable(false);
        columns.Bound(c => c.Ma_sv).Width(80)
            .ClientTemplate(
             "# if (ID_moodle != 0) { #" +
            (@Html.ActionLink("#=Ma_sv#", "UserProfile", "MoodleUser", new { userid = "ID" }, null).ToHtmlString().Replace("ID", "#=ID_moodle#"))+
             "# } else { ##=Ma_sv#" +
            "# } #")
            .HtmlAttributes(new { title = "Xem hồ sơ các nhân", style = "text-align:center" });
        columns.Bound(c => c.Ho_dem).Width(145);
        columns.Bound(c => c.Ten).Width(80);
        columns.Bound(c => c.Ngay_sinh).Width(100).Format("{0:dd-MM-yyyy}");
        columns.Bound(c => c.Gioi_tinh).Width(90);
        columns.Bound(c => c.Lop).Width(90);
        columns.Bound(c => c.DiemX).Width(85)
            .ClientTemplate(
            "# if (ID_moodle != 0) { #" +
                (@Html.ActionLink("#=DiemX#", "StudentQuizGrade", "MoodleQuiz", new { userid = "UserID", courseid = "#= getIDLHP() #" }, new { title = "Xem bảng điểm thành phần", style = "text-align:center" }).ToHtmlString().Replace("UserID", "#=ID_moodle#")) +
            "# } else { ##=DiemX#" +
            "# } #");
        columns.Bound(c => c.Ten_nhom);
        columns.Bound(c => c.Trang_thai).Title("Thực hiện")
           .Width(100)
           .ClientTemplate(
            "# if (Trang_thai) { #" +
                "<img class='image_check' src=" + Url.Content("~/Images/check.png") + " alt='Ok' title='Đã ghi danh' />" +
                "<button class='button-delete' title='Đình chỉ ghi danh' onclick='DeleteOneEnrol(#=ID#)'></button>" +
            "# } else { #" +
                "<button class='button-add' title='Ghi danh' onclick='CreateOneEnrol(#=ID#)'></button>" +
            "# } #");     
    })
    .Pageable(pager => pager.PageSizes(new int[] { 5, 10, 20, 50, 80 }).Refresh(true).Input(true).Numeric(false))
    .Sortable(s => s.SortMode(GridSortMode.SingleColumn))
    .Filterable()
    .Scrollable()
    .Groupable()
    .Resizable(r => r.Columns(true))
    .Reorderable(ro => ro.Columns(true))
    .Navigatable()
    //.ColumnMenu(menu => menu.Enabled(true).Sortable(false))
    //.Selectable(s => s.Mode(GridSelectionMode.Single))
    //.HtmlAttributes(new {style = "height:400px"})
    .Events(e =>
    {
        e.DataBound("onDataBound");
    })
    .DataSource(
        dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("GetEnrolStudents", "MoodleEnrol").Data("filterGrid"))
            .PageSize(50)
    )
)
<button id="createEnrol_bottom" class="k-button" onclick="CreateManyEnrol()">Ghi danh</button>
<button id="deleteEnrol_bottom" class="k-button" onclick="DeleteManyEnrol()">Đình chỉ ghi danh</button>
<div>
     @(Html.Kendo().ComboBox()
        .Name("Nhom")
        .Placeholder("Chọn nhóm...")
        .HtmlAttributes(new { style = "width:150px" })
        .DataTextField("Text")
        .DataValueField("Value")
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetGroupList", "MoodleGroup").Data("filterGrid");
            }).ServerFiltering(true);
        })
        .Enable(false)
        .AutoBind(false)
        .CascadeFrom("LopHocPhan")
    )
    @Html.TextBox("TenNhom", "", new { placeholder = "Nhập tên nhóm", style = "width:120px", @class = "k-textbox" })
    @Html.TextBox("MoTa", "", new { placeholder = "Mô tả nhóm", style = "width:200px", @class = "k-textbox"})
    <button id="createGroup" class="k-button" onclick="CreatGroup()">Tạo nhóm</button>
    <button id="deleteGroup" class="k-button" onclick="DeleteGroup()">Xóa nhóm</button>
    <button id="addMember" class="k-button" onclick="AddMember()">Thêm thành viên</button>
    <button id="deleteMember" class="k-button" onclick="DeleteMember()">Bớt thành viên</button>

</div>
<script type="text/javascript">
    var selectedVals = [];
    function getIDLHP() {
        return $("#LopHocPhan").val();
    }

    function filterGrid() {
        return {
            id_lop_tc: $("#LopHocPhan").val()
        }
    }

    function filterLopHocPhan() {
        return {
            id_hocky: $("#HocKy").val()
        }
    }

    function loadGrid() {
        selectedVals.splice(0, selectedVals.length);
        gridRefresh();
    }
    // on data bound, check checkboxes
    function onDataBound(e) {
        checkCells(selectedVals, '#masterCheckBox', '#Grid :checkbox');
    }
    // on click checkbox cell in a row
    $(function () {
        $('#Grid').on('click', '.chkbx', function () {
            var state = $(this).is(':checked');
            var grid = $('#Grid').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));

            checkVal(dataItem.ID, state, selectedVals);
            $('#masterCheckBox').attr('checked', isCheckedAll('#Grid :checkbox'));
        })
    })

    $('#masterCheckBox').click(function () { checkAll(this, '#Grid :checkbox'); })

    function gridRefresh() {
        $("#Grid").data("kendoGrid").dataSource.read();
    }

    function gridgroupRefresh() {
        gridRefresh();
        groupRefresh();
    }

    function groupRefresh() {
        $("#Nhom").data("kendoComboBox").dataSource.read();
    }

    function CreateOneEnrol(selectedVal) {
        var action = '@Url.Action("ManualEnrolStudents", "MoodleEnrol")' + '/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVal;
        processing(action, "Đang ghi danh cho sinh viên...", gridRefresh);
    }

    function DeleteOneEnrol(selectedVal) {
            var action = '@Url.Action("SuspendEnrolStudents", "MoodleEnrol")' + '/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVal;
            processing(action, "Đang đình chỉ ghi danh của sinh viên...", gridRefresh);
    }

   function CreateManyEnrol() {
        if (selectedVals.length == 0) {
            alert('Vui lòng chọn một sinh viên!');
            return;
        }
        var action = '@Url.Action("ManualEnrolStudents", "MoodleEnrol")' + '/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals;
        processing(action, "Đang ghi danh cho các sinh viên...", gridRefresh);
    }

    function DeleteManyEnrol() {
        if (selectedVals.length == 0) {
            alert('Vui lòng chọn một sinh viên!');
            return;
        }

        if (confirm('Bạn muốn đình chỉ ghi danh của các sinh viên đã chọn?')) {
            var action = '@Url.Action("SuspendEnrolStudents", "MoodleEnrol")' + '/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals;
            processing(action, "Đang đình chỉ ghi danh của các sinh viên...", gridRefresh);
        }
    }

    function CreateGroup() {
        if (jQuery("#TenNhom").val() == "") {
            alert('Tên nhóm không được để trống!');
            return;
        }
        var action = '@Url.Action("CreateGroup", "MoodleGroup")' + '/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&ten_nhom=' + jQuery("#TenNhom").val() + '&mo_ta=' + jQuery("#MoTa").val();
        processing(action, "Đang tạo nhóm học viên trong lớp học phần...", groupRefresh);
    }

    function DeleteGroup() {
        if ($('#Nhom').val() == '') {
            alert('Vui lòng chọn 1 nhóm');
            return;
        }

        if (confirm('Bạn muốn xóa nhóm học viên ' + $("#Nhom").data("kendoComboBox").text() + '?')) {
            var action = '@Url.Action("DeleteGroups", "MoodleGroup")' + '/?selectedVals=' + jQuery("#Nhom").val();
            processing(action, "Đang xóa nhóm học viên " + $("#Nhom").data("kendoComboBox").text() + "...", gridgroupRefresh);
        }
    }

    function AddMember() {
        if (selectedVals.length == 0) {
            alert('Vui lòng chọn một sinh viên!');
            return;
        }

        if ($('#Nhom').val() == '') {
            alert('Vui lòng chọn 1 nhóm');
            return;
        }
        var action = '@Url.Action("AddGroupMembers", "MoodleGroup")' + '/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals + '&id_nhom=' + jQuery("#Nhom").val();
        processing(action, "Đang thêm các học viên vào nhóm " + $("#Nhom").data("kendoComboBox").text() + "...", gridRefresh);
    }

    function DeleteMember() {
        if (selectedVals.length == 0) {
            alert('Vui lòng chọn một sinh viên!');
            return;
        }

        if ($('#Nhom').val() == '') {
            alert('Vui lòng chọn 1 nhóm');
            return;
        }
        if (confirm('Bạn muốn xóa các học viên đã chọn khỏi nhóm ' + $("#Nhom").data("kendoComboBox").text() + '?')) {
            var action = '@Url.Action("DeleteGroupMembers", "MoodleGroup")' + '/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals + '&id_nhom=' + jQuery("#Nhom").val();
            processing(action, "Đang xóa các học viên khỏi nhóm " + $("#Nhom").data("kendoComboBox").text() + "...", gridRefresh);
        }
    }
</script>
