@using Kendo.Mvc.UI;
@using CongThongTinSV.Models;
@{
    ViewBag.Title = "Quản lý nhóm và phân tổ nhóm học viên trên Moodle";
}
@(Html.Kendo().ComboBox()
    .Name("HocKy")
    .Placeholder("Chọn học kỳ...")
    .HtmlAttributes(new { style = "width:180px" })
    .DataTextField("Text")
    .DataValueField("Value")
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Action("GetSemesterList", "MoodleCategory");
        }).ServerFiltering(true);
    })
)
@(Html.Kendo().ComboBox()
    .Name("LopHocPhan")
    .Placeholder("Chọn lớp học phần...")
    .HtmlAttributes(new { style = "width:320px" })
    .DataTextField("Text")
    .DataValueField("Value")
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Action("GetCourseList", "MoodleCourse").Data("filterLopHocPhan");
        }).ServerFiltering(true);
    })
    .Events(e =>
    {
        e.Change("loadGrid");
    })
    .Enable(false)
    .AutoBind(false)
    .CascadeFrom("HocKy")
)
@Html.TextBox("TenNhom", "", new { placeholder = "Nhập tên nhóm", style = "width:120px", @class = "k-textbox" })
@Html.TextBox("MoTaNhom", "", new { placeholder = "Mô tả nhóm", style = "width:160px", @class = "k-textbox" })
<button id="createGroup" class="k-button">Tạo nhóm</button>
<button id="deleteGroup" class="k-button">Xóa nhóm</button>
@(Html.Kendo().Grid<CongThongTinSV.Models.MoodleGroup>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.ID_nhom)
            .ClientTemplate("<input type='checkbox' class='chkbx' value='#= ID_nhom #'/>")
            .HeaderTemplate("<input type='checkbox' id='masterCheckBox'/>")
            .Width(40)
            .Title("")
            .IncludeInMenu(false)
            .HeaderHtmlAttributes(new { style = "text-align:center" })
            .HtmlAttributes(new { style = "text-align:center" })
            .Filterable(false).Groupable(false).Sortable(false);
        columns.Bound(c => c.Ten_nhom).Width(150);
        columns.Bound(c => c.Mo_ta).Width(250);
        columns.Bound(c => c.Ten_to);
    })
    .Pageable(pager => pager.PageSizes(new int[] { 5, 10, 20}).Refresh(true).Input(true).Numeric(false))
    .Sortable(s => s.SortMode(GridSortMode.MultipleColumn))
    .Filterable()
    .Scrollable()
    .Groupable()
    .Resizable(r => r.Columns(true))
    .Reorderable(ro => ro.Columns(true))
    .Navigatable()
    //.ColumnMenu(menu => menu.Enabled(true).Sortable(false))
    //.Selectable(s => s.Mode(GridSelectionMode.Single))
    //.HtmlAttributes(new {style = "height:400px"})
    .Events(e =>
    {
        e.DataBound("onDataBound");
    })
    .DataSource(
        dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("GetGroups", "MoodleGroup").Data("filterGrid"))
            .PageSize(50)
    )
)
@(Html.Kendo().ComboBox()
    .Name("To")
    .Placeholder("Chọn tổ...")
    .HtmlAttributes(new { style = "width:187px" })
    .DataTextField("Text")
    .DataValueField("Value")
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Action("GetGroupingList", "MoodleGroup").Data("filterGrid");
        }).ServerFiltering(true);
    })
    .Enable(false)
    .AutoBind(false)
    .CascadeFrom("LopHocPhan")
)
@Html.TextBox("TenTo", "", new { placeholder = "Nhập tên tổ", style = "width:120px", @class = "k-textbox" })
@Html.TextBox("MoTaTo", "", new { placeholder = "Mô tả tổ", style = "width:160px", @class = "k-textbox" })
<button id="createGrouping" class="k-button">Tạo tổ</button>
<button id="updateGrouping" class="k-button">Cập nhật tổ</button>
<button id="assignGrouping" class="k-button">Thêm nhóm vào tổ</button>
<button id="unassignGrouping" class="k-button">Xóa nhóm khỏi tổ</button>
<button id="deleteGrouping" class="k-button">Xóa tổ</button>
<script type="text/javascript">
    var selectedVals = [];

    function filterGrid() {
        return {
            id_lop_tc: $("#LopHocPhan").val()
        }
    }

    function filterLopHocPhan() {
        return {
            id_hocky: $("#HocKy").val()
        }
    }

    function loadGrid() {
        selectedVals.splice(0, selectedVals.length);
        gridRefresh();
    }
    // on data bound, check checkboxes
    function onDataBound(e) {
        checkCells(selectedVals, '#masterCheckBox', '#Grid :checkbox');
    }
    // on click checkbox cell in a row
    $(function () {
        $('#Grid').on('click', '.chkbx', function () {
            var state = $(this).is(':checked');
            var grid = $('#Grid').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));

            checkVal(dataItem.ID_nhom, state, selectedVals);
           
            $('#masterCheckBox').attr('checked', isCheckedAll('#Grid :checkbox'));
        })
    })

    $('#masterCheckBox').click(function () { checkAll(this, '#Grid :checkbox'); })

    function gridRefresh() {
        $("#Grid").data("kendoGrid").dataSource.read();
    }

    function gridgroupingRefresh() {
        gridRefresh();
        groupingRefresh();
    }

    function groupingRefresh() {
        $("#To").data("kendoComboBox").dataSource.read();
    }

    $("#createGroup").click(function () {
        if (jQuery("#LopHocPhan").val() == "") {
            alert('Vui lòng chọn một lớp học phần!');
            return;
        }

        if (jQuery("#TenNhom").val() == "") {
            alert('Tên nhóm không được để trống!');
            return;
        }
        var action = '@Url.Action("CreateGroup","MoodleGroup")' + '/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&ten_nhom=' + jQuery("#TenNhom").val() + '&mo_ta=' + jQuery("#MoTaNhom").val();
        processing(action, "Đang tạo nhóm học viên trong lớp học phần...", gridRefresh);
    })

    $("#deleteGroup").click(function () {
        if (selectedVals.length == 0) {
            alert('Vui lòng chọn 1 nhóm!');
            return;
        }

        if (confirm('Bạn muốn xóa các nhóm học viên đã chọn?')) {
            var action = '@Url.Action("DeleteGroups","MoodleGroup")' + '/?selectedVals=' + selectedVals;
            processing(action, "Đang xóa các nhóm học viên...", gridRefresh);
        }
    })

    $("#createGrouping").click(function () {
        if (jQuery("#LopHocPhan").val() == "") {
            alert('Vui lòng chọn một lớp học phần!');
            return;
        }

        if (jQuery("#TenTo").val() == "") {
            alert('Tên tổ không được để trống!');
            return;
        }
        var action = '@Url.Action("CreateGrouping", "MoodleGroup")' + '/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&ten_to=' + jQuery("#TenTo").val() + '&mo_ta=' + jQuery("#MoTaTo").val();
        processing(action, "Đang tạo tổ trong lớp học phần...", groupingRefresh);
    })

    $("#deleteGrouping").click(function () {
        if ($('#To').val() == '') {
            alert('Vui lòng chọn 1 tổ!');
            return;
        }

        if (confirm('Bạn muốn xóa tổ ' + $("#To").data("kendoComboBox").text() + '?')) {
            var action = '@Url.Action("DeleteGroupings", "MoodleGroup")' + '/?selectedVals=' + jQuery("#To").val();
            processing(action, "Đang xóa tổ " + $("#To").data("kendoComboBox").text() + "...", gridgroupingRefresh);
        }
    })

    $("#updateGrouping").click(function () {
        if (jQuery("#TenTo").val() == "") {
            alert('Tên tổ không được để trống!');
            return;
        }
        var action = '@Url.Action("UpdateGrouping", "MoodleGroup")' + '/?&ten_to=' + jQuery("#TenTo").val() + '&mo_ta=' + jQuery("#MoTaTo").val() + '&id_to=' + jQuery("#To").val();
        processing(action, "Đang cập nhật tổ trong lớp học phần...", gridgroupingRefresh);
    })

    $("#assignGrouping").click(function () {
        if (selectedVals.length == 0) {
            alert('Vui lòng chọn một nhóm!');
            return;
        }

        if ($('#To').val() == '') {
            alert('Vui lòng chọn 1 tổ!');
            return;
        }
        var action = '@Url.Action("AssignGrouping", "MoodleGroup")' + '/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals + '&id_to=' + jQuery("#To").val();
        processing(action, "Đang thêm các nhóm vào tổ " + $("#To").data("kendoComboBox").text() + "...", gridRefresh);
    })

    $("#unassignGrouping").click(function () {
        if (selectedVals.length == 0) {
            alert('Vui lòng chọn một nhóm!');
            return;
        }

        if ($('#To').val() == '') {
            alert('Vui lòng chọn 1 tổ!');
            return;
        }

        if (confirm('Bạn muốn xóa các nhóm đã chọn khỏi tổ ' + $("#To").data("kendoComboBox").text() + '?')) {
            var action = '@Url.Action("UnassignGrouping", "MoodleGroup")' + '/?id_lop_tc=' + jQuery("#LopHocPhan").val() + '&selectedVals=' + selectedVals + '&id_to=' + jQuery("#To").val();
            processing(action, "Đang xóa các nhóm khỏi tổ " + $("#To").data("kendoComboBox").text() + "...", gridRefresh);
        }
    })
</script>
