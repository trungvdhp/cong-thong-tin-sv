@using Kendo.Mvc.UI;
@using CongThongTinSV.Models;
@{
    ViewBag.Title = "Tìm kiếm tài khoản giáo viên trên Moodle";
}

@(Html.Kendo().ComboBox()
    .Name("Khoa")
    .Placeholder("Chọn khoa")
    .HtmlAttributes(new {style="width:260px"})
    .DataTextField("Text")
    .DataValueField("Value")
        //.SelectedIndex(0)
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Action("GetKhoa", "Khoa");
        }).ServerFiltering(true);
    })
    .Events(e =>
    {
        e.Change("loadGrid");
    })
    //.HtmlAttributes(new { style = "display: block;"})
)
<button id="exportToExcel" class="k-button" onclick="exportToExcel()">Xuất ra Excel</button>
@(Html.Kendo().Grid<CongThongTinSV.Models.MoodleTeacher>()
    .Name("Grid")
    .Columns(columns =>
    {
        //columns.Bound(c => c.ID_cb)
        //    .ClientTemplate("<input type='checkbox' class='chkbx' value='#= ID_cb #'/>")
        //    .HeaderTemplate("<input type='checkbox' id='masterCheckBox'/>")
        //    .Width(50)
        //    .Title("")
        //    .IncludeInMenu(false)
        //    .HeaderHtmlAttributes(new { style = "text-align:center" })
        //    .HtmlAttributes(new { style = "text-align:center" })
        //    .Filterable(false).Groupable(false).Sortable(false);
        columns.Bound(c => c.Ma_cb).ClientTemplate(
          (@Html.ActionLink("#=ID_moodle#", "UserProfile", "MoodleUser", new { userid = "UserId" }, new { title = "Xem hồ sơ cá nhân" }).ToHtmlString().Replace("UserId", "#=ID_moodle#")))
          .HtmlAttributes(new { style = "text-align:center" })
          .Title("Mã giáo viên")
          .Width(115);
        columns.Bound(c => c.Ho_dem).Width(150);
        columns.Bound(c => c.Ten).Width(85);
        columns.Bound(c => c.Ngay_sinh).Width(100).Format("{0:dd-MM-yyyy}").HtmlAttributes(new { style = "text-align:center" });
        columns.Bound(c => c.Gioi_tinh);
    })
    .Pageable(pager => pager.PageSizes(new int[] { 5, 10, 20, 50, 80 }).Refresh(true).Input(true).Numeric(false).Messages(m => { m.ItemsPerPage("dòng mỗi trang"); m.First("Trang đầu tiên"); m.Last("Trang cuối cùng"); m.Next("Trang sau"); m.Previous("Trang trước"); m.Refresh("Làm mới"); }))
    .Sortable(s => s.SortMode(GridSortMode.SingleColumn))
    .Filterable()
    .Scrollable()
    .Groupable()
    .Resizable(r => r.Columns(true))
    .Reorderable(ro => ro.Columns(true))
    .Navigatable()
    //.HtmlAttributes(new { style = "height:auto" })
    .ColumnMenu(menu => menu.Enabled(true).Sortable(false))
    //.Selectable(s => s.Mode(GridSelectionMode.Single))
    .Events(e =>
    {
        e.DataBound("onDataBound");
    })
    .DataSource(
        dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("GetSearchTeachers", "MoodleUser").Data("filterGrid"))
            .PageSize(50)
    )
        //.ToolBar(toolbar => toolbar.Custom().Text("Xuất ra excel").Url("#").HtmlAttributes(new { onclick = "exportToExcel()", style= "float:right;"}))
)

<script type="text/javascript">
    //var selectedVals = [];
    var requestObject;

    function filterGrid() {
        return {
            id_khoa: $("#Khoa").val()
        }
    }
    
    function loadGrid() {
        //selectedVals.splice(0, selectedVals.length);
        gridRefresh();
    }
    // on data bound, check checkboxes
    function onDataBound(e) {
        //checkCells(selectedVals, '#masterCheckBox', '#Grid :checkbox');
        resizeGrid("#Grid");
        // ask the parameterMap to create the request object for you
        var grid = $('#Grid').data('kendoGrid');
        requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
        .options.parameterMap({
            page: grid.dataSource.page(),
            sort: grid.dataSource.sort(),
            filter: grid.dataSource.filter()
        });
    }

    //export to excel
    function exportToExcel() {

        if (jQuery("#Khoa").val() == "") {
            alert('Vui lòng chọn một khoa!');
            return;
        }

        var dataFields = [];
        var dataTitles = [];

        getFieldAndTitles('#Grid .k-header', dataFields, dataTitles);

        document.location.href = '@Url.Action("ExportTeacherToExcel", "MoodleUser")' + '/?sort=' + requestObject.sort + '&filter=' + requestObject.filter + '&datafields=' + dataFields + '&datatitles=' + dataTitles + '&id_khoa=' + jQuery("#Khoa").val() + '&khoa=' + $("#Khoa").data("kendoComboBox").text();
    };

    function gridRefresh() {
        $("#Grid").data("kendoGrid").dataSource.read();
    }

    //// on click checkbox cell in a row
    //$(function () {
    //    $('#Grid').on('click', '.chkbx', function () {
    //        var state = $(this).is(':checked');
    //        var grid = $('#Grid').data().kendoGrid;
    //        var dataItem = grid.dataItem($(this).closest('tr'));

    //        checkVal(dataItem.ID_cb, state, selectedVals);
    //        $('#masterCheckBox').attr('checked', isCheckedAll('#Grid :checkbox'));
    //    })
    //})

    //$('#masterCheckBox').click(function () { checkAll(this, '#Grid :checkbox'); })
</script>