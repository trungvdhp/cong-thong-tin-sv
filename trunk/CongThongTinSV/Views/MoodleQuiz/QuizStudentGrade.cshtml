@{
    ViewBag.Title = ViewBag.QuizName;
    string title = ViewBag.CourseName + " - " + ViewBag.QuizName;
}

<h2>@title</h2>
@(Html.Kendo().Grid<CongThongTinSV.Models.MoodleQuizStudentGrade>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.ID)
            .ClientTemplate("<input type='checkbox' class='chkbx' value='#= ID #'/>")
            .HeaderTemplate("<input type='checkbox' id='masterCheckBox'/>")
            .Width(40)
            .Title("")
            .HeaderHtmlAttributes(new { style = "text-align:center" })
            .HtmlAttributes(new { style = "text-align:center" })
            .Filterable(false).Groupable(false).Sortable(false);
        columns.Bound(c => c.UserName).Width(80);
        columns.Bound(c => c.LastName).Width(150);
        columns.Bound(c => c.FirstName).Width(80);
        columns.Bound(c => c.OldGrade).Format("{0:0.0}").Width(90);
        columns.Bound(c => c.NewGrade).Format("{0:0.0}").Width(95);
        columns.Bound(c => c.IsDiffGrade).Title("")
            .Sortable(false)
            .Filterable(false)
            .Groupable(false)
            .ClientTemplate("<img width='16' height='16' src=" +
            "# if (IsDiffGrade) { #" +
                Url.Content("~/Images/cross_red_big.gif") +
            "# } else { #" +
                Url.Content("~/Images/tick_green_big.gif") +
            "# } # />");
    })
    .Pageable(pager => pager.PageSizes(new int[] { 5, 10, 20, 50, 100 }).Refresh(true).Input(true).Numeric(false))
    .Sortable(s => s.SortMode(GridSortMode.SingleColumn))
    .Filterable()
    .Scrollable()
    .Groupable()
    .Resizable(r => r.Columns(true))
    .Reorderable(ro => ro.Columns(true))
    .Navigatable()
    //.ColumnMenu(menu => menu.Enabled(true).Sortable(false))
    //.Selectable(s => s.Mode(GridSelectionMode.Single))
    .Events(e =>
    {
        e.DataBound("onDataBound");
    })
    .DataSource(
        dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("GetQuizStudentGrades", "MoodleQuiz", new { quizid = ViewBag.QuizID }))
            .PageSize(50)
    )
)
<div>
    <button id="updateMark" class="k-button">Cập nhật điểm thi</button>
</div>
<br />
<div style="text-align: center;">
@Html.ActionLink("Quay về khóa học", "CourseQuizList", "MoodleCourse", routeValues: new { courseid = ViewBag.CourseID }, htmlAttributes: new { title = "Back to the course" })
</div>
<script type="text/javascript">
    var selectedVals = [];

    function loadGrid() {
        selectedVals.splice(0, selectedVals.length);
        gridRefresh();
    }
    // on data bound, check checkboxes
    function onDataBound(e) {
        checkCells(selectedVals, '#masterCheckBox', '#Grid :checkbox');
    }
    // on click checkbox cell in a row
    $(function () {
        $('#Grid').on('click', '.chkbx', function () {
            var state = $(this).is(':checked');
            var grid = $('#Grid').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));

            checkVal(dataItem.ID, state, selectedVals);
            $('#masterCheckBox').attr('checked', isCheckedAll('#Grid :checkbox'));
        })
    })

    $('#masterCheckBox').click(function () { checkAll(this, '#Grid :checkbox'); })

    function gridRefresh() {
        $("#Grid").data("kendoGrid").dataSource.read();
    }

    $("#updateMark").click(function () {
        if (selectedVals.length == 0) {
            alert('Vui lòng chọn một học viên!');
            return;
        }

        if (confirm('Bạn muốn cập nhật điểm mới cho các học viên đã chọn?')) {
            var action = '@Url.Action("UpdateYGrades","MoodleGrade")' + '/?quizid=' + @ViewBag.QuizID + '&selectedVals=' + selectedVals
            processing(action, "Đang cập nhật điểm mới cho các học viên...", gridRefresh);
        }
      })
</script>

